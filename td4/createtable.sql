-- TP3

CREATE TABLE MEMBRE
(
    pseudo VARCHAR(20) PRIMARY KEY,
	prenom VARCHAR(35) NOT NULL UNIQUE,
	nom VARCHAR(35) NOT NULL,
	dteNaiss DATE NOT NULL
);

CREATE TABLE CONNEXION
(
	pseudo VARCHAR(100) REFERENCES MEMBRE,
	debut TIMESTAMP NOT NULL,
	fin TIMESTAMP,
	PRIMARY KEY (pseudo, debut)
);

CREATE TABLE SORTIE
(
	idSort INTEGER PRIMARY KEY,
	nom VARCHAR(100) NOT NULL,
	dte DATE NOT NULL,
	responsable VARCHAR(20) NOT NULL REFERENCES MEMBRE,
	genre VARCHAR(25) NOT NULL
);

CREATE TABLE INTERESSE
(
	pseudo VARCHAR(20) REFERENCES MEMBRE,
	hobby VARCHAR(25),
	PRIMARY KEY (pseudo, hobby)
);

CREATE TABLE INSCRIPTION
(
	pseudo VARCHAR(20) REFERENCES MEMBRE,
	idSort INTEGER REFERENCES SORTIE,
	statut INTEGER CHECK(statut BETWEEN -1 AND 1) NOT NULL,
	PRIMARY KEY (pseudo, idSort)
);

CREATE TABLE AMITIE
(
	pseudo VARCHAR(20) REFERENCES MEMBRE,
	ami VARCHAR(20) REFERENCES MEMBRE,
	PRIMARY KEY (pseudo, ami)
);


-- TP4

ALTER TABLE INSCRIPTION
    ADD nbInvite NUMBER,
	ADD CONSTRAINT naturel
		CHECK nbInvite >= 0;

CREATE TABLE ATTENTE
(
	pseudo VARCHAR(20) REFERENCES MEMBRE,
	idSort INTEGER REFERENCES SORTIE,
	statut INTEGER CHECK(statut BETWEEN -1 AND 1) NOT NULL,
	PRIMARY KEY (pseudo, idSort)
);

ALTER TABLE SORTIE
	ADD description VARCHAR(1000),
	ADD adresse VARCHAR(255),
	ADD maxPers NUMBER,
    ADD CONSTRAINT naturelNonNul
        CHECK maxPers > 0;

CREATE TABLE COMMENTAIRE
(
	idComment INTEGER PRIMARY KEY,
	pseudo VARCHAR(20) REFERENCES MEMBRE NOT NULL,
	idSort INTEGER REFERENCES SORTIE NOT NULL,
	text VARCHAR(500) NOT NULL,
	dte DATE NOT NULL
);
